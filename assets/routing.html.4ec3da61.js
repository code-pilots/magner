import{r as e,o as t,c as p,a as o,d as r,w as c,F as l,e as s,b as n}from"./app.92ad5328.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const u={},m=s(`<h1 id="router-controller" tabindex="-1"><a class="header-anchor" href="#router-controller" aria-hidden="true">#</a> Router controller</h1><p>Router controller is a wrapper around usual vue router configuration. It is meant to be flexible by providing you with different presets such as &#39;cards&#39;, &#39;tables&#39; etc.</p><h2 id="roles" tabindex="-1"><a class="header-anchor" href="#roles" aria-hidden="true">#</a> Roles</h2><p>You can restrict the access tp some routes for different types of authenticated users. To do so, you need to firstly set up the ROLE enum like so:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">enum</span> <span class="token constant">ROLE</span> <span class="token punctuation">{</span>
  <span class="token constant">SUPER_ADMIN</span> <span class="token operator">=</span> <span class="token string">&#39;ROLE_SUPER_ADMIN&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">ADMIN</span> <span class="token operator">=</span> <span class="token string">&#39;ROLE_ADMINISTRATOR&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DOCTOR</span> <span class="token operator">=</span> <span class="token string">&#39;ROLE_DOCTOR&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Every value in the enum is the role string coming from the backend when the profile request is initiated. It means that you have to know what type of roles does backend support. In our case, there are three types:</p><ul><li>SUPER_ADMIN \u2013 User with all possible privileges</li><li>ADMIN \u2013 Administrator, has write access to limited set of entities</li><li>DOCTOR \u2013 User with limited write and read privileges to entities related to this particular user.</li></ul>`,7),k=n("You should set up how the role is taken from the backend request in "),b=n("the development project config"),d=n(" Profile section. Make sure to read and understand mentioned topic."),h=s(`<p>To assign the roles to a route, use the roles array:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>route <span class="token operator">=</span> <span class="token punctuation">{</span>
  roles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">ADMIN</span><span class="token punctuation">,</span> <span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>In the example, user role will be checked every time he/she enters the app. If the authentication is not passed or the role is not applicable for a specific route, user will be redirected.</p><h2 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> Controller</h2><p>After roles configuration, apply the controller itself (notice the ROLE enum passed as the controller&#39;s generic):</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token generic-function"><span class="token function">routerController</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">ROLE</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** Properties used inside the core for redirecting */</span>
  global<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** Name of the route to which should we redirect unauthenticated user from protected route */</span>
    homeNoAuthName<span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/** Name of the route to which should we redirect authenticated user from unprotected route */</span>
    homeHasAuthName<span class="token operator">:</span> <span class="token string">&#39;dashboard&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  routes<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Now it&#39;s time to configure the routes:</p><h2 id="custom-route" tabindex="-1"><a class="header-anchor" href="#custom-route" aria-hidden="true">#</a> Custom route</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>route <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** Vue-router properties are encapsulated into the &#39;route&#39; prop */</span>
  route<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** Required name property as a unique route identifier  */</span>
    name<span class="token operator">:</span> <span class="token string">&#39;dashboard&#39;</span><span class="token punctuation">,</span>

    path<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>

    <span class="token doc-comment comment">/** Custom component that is passed to the vue router */</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;app/pages/home.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token doc-comment comment">/** Additional information about the route */</span>
    meta<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token doc-comment comment">/** Name displayed in the sidebar menu and in the header when active */</span>
  title<span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span>
  
  <span class="token doc-comment comment">/** An array of role Enums. If &#39;roles&#39; === null, no authorization needed */</span>
  roles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">DOCTOR</span><span class="token punctuation">,</span> <span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">ADMIN</span><span class="token punctuation">,</span> <span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token doc-comment comment">/** &#39;main&#39;, &#39;empty&#39; or your own layout component */</span>
  layout<span class="token operator">:</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span>

  <span class="token doc-comment comment">/** Views accept configs as page props to display everything according to those configs */</span>
  config<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token doc-comment comment">/** Show the route in the sidebar or not */</span>
  visible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  
  <span class="token doc-comment comment">/** Icon to be displayed in the sidebar */</span>
  icon<span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>This example route shows how to create a page from scratch. You just define the route&#39;s name, path and a custom vue component. Then you give the page a title, icon and visibility \u2013 the info is used in the sidebar. Layout specifies the header and a sidebar itself (it&#39;s better to always put layout: &#39;main&#39; if you require authorization in the route).</p><h2 id="preset-route" tabindex="-1"><a class="header-anchor" href="#preset-route" aria-hidden="true">#</a> Preset route</h2><p>Presets are templates of the routes that make it easier to work with usual things like tables or creation pages. For now, there are only several presets:</p><ul><li><strong>login</strong> \u2013 used for auth page</li><li><strong>table</strong> \u2013 used for page with data table, pagination and filtering</li><li><strong>card</strong> \u2013 Create, Update and Delete the entity data</li></ul><p>Add a preset like so:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>route <span class="token operator">=</span> <span class="token punctuation">{</span>
  preset<span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
  config<span class="token operator">:</span> loginPageConfig<span class="token punctuation">,</span>
  roles<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Or with the table:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>route <span class="token operator">=</span> <span class="token punctuation">{</span>
  preset<span class="token operator">:</span> <span class="token string">&#39;table&#39;</span><span class="token punctuation">,</span>
  config<span class="token operator">:</span> patientsConfig<span class="token punctuation">,</span>
  roles<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">SUPER_ADMIN</span><span class="token punctuation">,</span> <span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">DOCTOR</span><span class="token punctuation">,</span> <span class="token constant">ROLE</span><span class="token punctuation">.</span><span class="token constant">DOCTOR</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token doc-comment comment">/** Sidebar settings */</span>
  visible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token string">&#39;Patients&#39;</span><span class="token punctuation">,</span>
  icon<span class="token operator">:</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span>

  route<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;patients&#39;</span><span class="token punctuation">,</span>
    path<span class="token operator">:</span> <span class="token string">&#39;/patients&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>As always, <code>config</code> property is passed to the page as a property. But with presets you don&#39;t manage those page \u2013 the core will do everything for you.</p><h2 id="group-route" tabindex="-1"><a class="header-anchor" href="#group-route" aria-hidden="true">#</a> Group route</h2><p>Groups are used in the sidebar to add the visual nesting of routes. Simply write:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>group <span class="token operator">=</span> <span class="token punctuation">{</span>
  group<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  name<span class="token operator">:</span> <span class="token string">&#39;dicts&#39;</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token string">&#39;Dictionaries&#39;</span><span class="token punctuation">,</span>
  icon<span class="token operator">:</span> <span class="token string">&#39;grid&#39;</span><span class="token punctuation">,</span>
  routes<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token operator">...</span>route1 <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token operator">...</span>route2 <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,21);function g(f,y){const a=e("RouterLink");return t(),p(l,null,[m,o("p",null,[k,r(a,{to:"/configuration/development.html"},{default:c(()=>[b]),_:1}),d]),h],64)}var R=i(u,[["render",g]]);export{R as default};
